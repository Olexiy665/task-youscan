{"version":3,"sources":["features/ImagesList/components/LoadingBar/LoadingBar.module.css","features/Filters/components/CheckboxItem/CheckboxItem.module.css","features/ImagesList/components/ImageListItem/ImageListItem.module.css","features/Filters/components/FilterGroup/FilterGroup.module.css","features/Filters/Filters.module.css","features/ImagesList/ImageList.module.css","screens/Main/Main.module.css","constants/filters-init.ts","features/Filters/components/CheckboxItem/CheckboxItem.tsx","features/Filters/components/FilterGroup/FilterGroup.tsx","utils/utils.ts","features/Filters/Filters.tsx","api/fetch.ts","api/pixabay-images/index.ts","hooks/useImages.ts","constants/env-var.ts","constants/api-routes.ts","features/ImagesList/components/ImageListItem/ImageListItem.tsx","features/ImagesList/components/LoadingBar/LoadingBar.tsx","features/ImagesList/ImagesList.tsx","screens/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","FILTERS_CATEGORIES","value","label","defaultValue","filters","CheckboxItem","isSelected","onChange","name","htmlFor","className","classSet","styles","CheckboxBorder","xmlns","viewBox","checkmarkCheck","fill","d","Label","onClick","id","FilterGroup","selectedValue","groupChangeHandler","filterValue","Group","map","filter","FilterGroupMemo","React","memo","paramsToRecord","params","nextFilters","forEach","key","Filters","useState","URLSearchParams","window","location","search","setFilter","changeHandler","groupValue","delete","append","nextParams","history","pushState","event","CustomEvent","detail","newParams","dispatchEvent","updateStore","toString","category","http","request","a","fetch","response","json","parsedBody","console","log","ok","Error","statusText","HttpGet","path","args","method","Request","FetchStatus","pixabayImages","searchParams","queryString","url","ImageListItem","previewURL","previewHeight","previewWidth","user","type","imageWidth","imageHeight","useInView","threshold","ref","inView","entry","isLoaded","setIsLoad","ratio","setRatio","useEffect","intersectionRect","width","style","height","ItemInfo","LeftInfo","Sizes","ImgWrapper","onLoad","alt","src","LoadingBar","isActive","Slider","Line","Subline","Inc","Dec","ImagesList","images","setImages","INIT","status","setStatus","getImages","queryParams","LOADING","data","hits","SUCCESS","ERROR","storeChangeHandler","e","addEventListener","replace","removeEventListener","useImages","ImageList","length","item","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb675ce8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"LoadingBar_Slider__1zHek\",\"isActive\":\"LoadingBar_isActive__3NWFv\",\"Line\":\"LoadingBar_Line__3yY2O\",\"Subline\":\"LoadingBar_Subline__uUaxd\",\"Inc\":\"LoadingBar_Inc__1mn5r\",\"increase\":\"LoadingBar_increase__AZnN9\",\"Dec\":\"LoadingBar_Dec__1Ko_C\",\"decrease\":\"LoadingBar_decrease__1Mpqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckboxItem\":\"CheckboxItem_CheckboxItem__3OXGb\",\"CheckboxBorder\":\"CheckboxItem_CheckboxBorder__2S3e7\",\"isSelected\":\"CheckboxItem_isSelected__x2egz\",\"CheckmarkWrapper\":\"CheckboxItem_CheckmarkWrapper__zFNSk\",\"Label\":\"CheckboxItem_Label__1cbqa\",\"checkmarkCheck\":\"CheckboxItem_checkmarkCheck__3snP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgWrapper\":\"ImageListItem_ImgWrapper__2laYi\",\"ImageListItem\":\"ImageListItem_ImageListItem__1DfAZ\",\"ItemInfo\":\"ImageListItem_ItemInfo__1Wq8e\",\"LeftInfo\":\"ImageListItem_LeftInfo__ntA84\",\"Sizes\":\"ImageListItem_Sizes__HxXT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterGroup\":\"FilterGroup_FilterGroup__1mSNb\",\"Group\":\"FilterGroup_Group__3DVct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filters\":\"Filters_Filters__3Htn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageList\":\"ImageList_ImageList__2AuWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__3z95a\"};","export const IMAGE_TYPE_FILTERS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'photo',\n    label: 'Photo',\n  },\n  {\n    value: 'illustration',\n    label: 'Illustration',\n  },\n  {\n    value: 'vector',\n    label: 'Vector',\n  },\n];\n\nexport const IMAGE_CATEGORY_FILTERS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'fashion',\n    label: 'Fashion',\n  },\n  {\n    value: 'education',\n    label: 'Education',\n  },\n  {\n    value: 'animals',\n    label: 'Animals',\n  },\n  {\n    value: 'computer',\n    label: 'Computer',\n  },\n];\n\nexport const FILTERS_CATEGORIES = [\n  {\n    value: 'image_type',\n    label: 'Image type',\n    defaultValue: 'all',\n    filters: IMAGE_TYPE_FILTERS,\n  },\n  {\n    value: 'category',\n    label: 'Category',\n    defaultValue: 'all',\n    filters: IMAGE_CATEGORY_FILTERS,\n  },\n];\n","import React from 'react';\nimport classSet from 'classnames';\nimport styles from './CheckboxItem.module.css';\nimport { Props } from './types';\n\nexport const CheckboxItem = ({\n  label, value, isSelected, onChange, name,\n}: Props) => {\n  const clickHandler = () => {\n    onChange(value);\n  };\n  return (\n    <label\n      htmlFor={label}\n      className={classSet(styles.CheckboxItem, {\n        [styles.isSelected]: isSelected,\n      })}\n    >\n      <div className={styles.CheckboxBorder}>\n        <svg\n          className=\"checkmark\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 36 36\"\n        >\n          <path\n            className={styles.checkmarkCheck}\n            fill=\"none\"\n            d=\"M4.1 17.2l7.1 8.5 16.7-16.8\"\n          />\n        </svg>\n      </div>\n      <span className={styles.Label}>{label}</span>\n      <input onClick={clickHandler} id={name} name={name} value={value} />\n    </label>\n  );\n};\n","import React from 'react';\nimport styles from './FilterGroup.module.css';\nimport { Props } from './types';\nimport CheckboxItem from '../CheckboxItem';\n\nexport const FilterGroup = ({\n  filters, value, onChange, selectedValue, label,\n}: Props) => {\n  const groupChangeHandler = (filterValue: string) => {\n    onChange(value, filterValue);\n  };\n  return (\n    <div className={styles.FilterGroup}>\n      <h3>{label}</h3>\n      <div className={styles.Group}>\n        {filters.map((filter) => <CheckboxItem name={`${value}-${filter.value}`} isSelected={selectedValue === filter.value} onChange={groupChangeHandler} value={filter.value} label={filter.label} key={`${value}-${filter.value}`} />)}\n      </div>\n    </div>\n  );\n};\n\nexport const FilterGroupMemo = React.memo(FilterGroup);\n","export const paramsToRecord = (params: URLSearchParams) => {\n  const nextFilters: Record<string, string> = {};\n\n  params.forEach((value, key) => {\n    nextFilters[key] = value;\n  });\n  return nextFilters;\n};\n","import React, { useState } from 'react';\nimport { FILTERS_CATEGORIES } from '../../constants/filters-init';\n\nimport styles from './Filters.module.css';\nimport { FilterGroupMemo } from './components/FilterGroup';\nimport { paramsToRecord } from '../../utils/utils';\n\nconst updateStore = (nextParams: string) => {\n  window.history.pushState(null, '', `?${nextParams}`);\n  const event = new CustomEvent('search-params-change', {\n    detail: {\n      newParams: nextParams,\n    },\n  });\n  window.dispatchEvent(event);\n};\n\nexport const Filters = () => {\n  const [filters, setFilter] = useState<Record<string, string>>(() => paramsToRecord(\n    new URLSearchParams(window.location.search),\n  ));\n  const changeHandler = (groupValue: string, filterValue: string) => {\n    const params = new URLSearchParams(window.location.search);\n    params.delete(groupValue);\n    params.append(groupValue, filterValue);\n\n    setFilter(paramsToRecord(params));\n    const stringifiedParams = params.toString();\n    updateStore(stringifiedParams);\n  };\n\n  return (\n    <div className={styles.Filters}>\n      {FILTERS_CATEGORIES.map((category) => (\n        <FilterGroupMemo\n          onChange={changeHandler}\n          selectedValue={filters[category.value] || category.defaultValue}\n          filters={category.filters}\n          value={category.value}\n          label={category.label}\n          key={category.value}\n        />\n      ))}\n    </div>\n  );\n};\n","interface HttpResponse<T> extends Response {\n  parsedBody?: T;\n}\n\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\n  const response: HttpResponse<T> = await fetch(request);\n  try {\n    response.parsedBody = await response.json();\n  } catch (ex) {\n    console.log(ex);\n  }\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport async function HttpGet<T>(\n  path: string,\n  args: RequestInit = { method: 'get' },\n): Promise<HttpResponse<T>> {\n  return http<T>(new Request(path, args));\n}\n","import { PIXABAY_API } from '../../constants/api-routes';\nimport { PIXABAY_API_KEY } from '../../constants/env-var';\nimport { HttpGet } from '../fetch';\nimport { PixabayResponse } from './types';\n\nexport const pixabayImages = {\n  async getImages(params?: string) {\n    const searchParams = new URLSearchParams();\n    searchParams.append('key', PIXABAY_API_KEY);\n    searchParams.append('per_page', '200');\n    const queryString = searchParams.toString();\n    const url = `${PIXABAY_API}/?${queryString}&${params}`;\n    const { parsedBody } = await HttpGet<PixabayResponse>(url);\n    return parsedBody;\n  },\n};\n","import { useEffect, useState } from 'react';\nimport { pixabayImages } from '../api/pixabay-images';\nimport { PixabayImage } from '../api/pixabay-images/types';\n\nexport enum FetchStatus{\n  INIT = 'INIT',\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  ERROR = 'ERROR',\n}\n\nexport function useImages() {\n  const [images, setImages] = useState<PixabayImage[]>([]);\n  const [status, setStatus] = useState(FetchStatus.INIT);\n\n  const getImages = async (queryParams: string) => {\n    try {\n      setStatus(FetchStatus.LOADING);\n      const data = await pixabayImages.getImages(queryParams);\n      setImages(data?.hits || []);\n      setStatus(FetchStatus.SUCCESS);\n    } catch (e) {\n      setStatus(FetchStatus.ERROR);\n    }\n  };\n  const storeChangeHandler = (e: Event) => {\n    /* @ts-ignore */\n    getImages(e.detail.newParams);\n  };\n\n  useEffect(() => {\n    window.addEventListener('search-params-change', storeChangeHandler);\n    getImages(window.location.search.replace('?', ''));\n    return () => {\n      window.removeEventListener('search-params-change', storeChangeHandler);\n    };\n  }, []);\n\n  return { images, status };\n}\n","// instead of env variables for make easier gh pages deploy\n\nexport const PIXABAY_API_KEY = '21947699-393eac7a8759dfdcef79bff41';\n","export const PIXABAY_API = 'https://pixabay.com/api';\n","import React, { useState, useEffect } from 'react';\nimport { AiOutlineUser, AiFillFileImage } from 'react-icons/ai';\nimport { useInView } from 'react-intersection-observer';\nimport styles from './ImageListItem.module.css';\nimport { Props } from './types';\n\nexport const ImageListItem = ({\n  previewURL,\n  previewHeight,\n  previewWidth,\n  user,\n  type,\n  imageWidth,\n  imageHeight,\n}: Props) => {\n  const { ref, inView, entry } = useInView({\n    threshold: 1,\n  });\n  const [isLoaded, setIsLoad] = useState(false);\n  const [ratio, setRatio] = useState(0);\n  useEffect(() => {\n    if (entry?.intersectionRect?.width && entry?.intersectionRect?.width > 0) {\n      setRatio(previewWidth / entry?.intersectionRect.width);\n    }\n  }, [entry?.intersectionRect.width]);\n\n  const onLoadHandle = () => {\n    setIsLoad(true);\n  };\n  return (\n    <div\n      style={{ height: `${previewHeight / ratio}px` }}\n      className={styles.ImageListItem}\n      ref={ref}\n    >\n      <div className={styles.ItemInfo}>\n        <div className={styles.LeftInfo}>\n          <span>\n            <AiOutlineUser />\n            {' '}\n            {user}\n          </span>\n          <span>\n            <AiFillFileImage />\n            {' '}\n            {type}\n          </span>\n        </div>\n        <div className={styles.Sizes}>\n          <span>\n            w:\n            {' '}\n            {imageWidth}\n          </span>\n          <span>\n            h:\n            {' '}\n            {imageHeight}\n          </span>\n        </div>\n      </div>\n      <div className={styles.ImgWrapper}>\n        {(isLoaded || inView) && (\n          <img onLoad={onLoadHandle} alt=\"text\" src={previewURL} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classSet from 'classnames';\nimport styles from './LoadingBar.module.css';\n\nexport const LoadingBar = ({ isActive }: { isActive: boolean }) => (\n  <div className={classSet(styles.Slider, { [styles.isActive]: isActive })}>\n    <div className={styles.Line} />\n    <div className={classSet(styles.Subline, styles.Inc)} />\n    <div className={classSet(styles.Subline, styles.Dec)} />\n  </div>\n);\n","import React from 'react';\nimport { FetchStatus, useImages } from '../../hooks/useImages';\nimport ImageListItem from './components/ImageListItem';\nimport LoadingBar from './components/LoadingBar';\nimport styles from './ImageList.module.css';\n\nexport const ImagesList = () => {\n  const { images, status } = useImages();\n\n  return (\n    <div className={styles.ImageList}>\n      <LoadingBar isActive={status === FetchStatus.LOADING || !images.length} />\n      {images.map((item) => (\n        <ImageListItem\n          id={item.id}\n          previewHeight={item.previewHeight}\n          user={item.user}\n          type={item.type}\n          imageHeight={item.imageHeight}\n          imageWidth={item.imageWidth}\n          previewWidth={item.previewWidth}\n          key={item.id}\n          previewURL={item.previewURL}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport Filters from '../../features/Filters';\n\nimport ImagesList from '../../features/ImagesList';\nimport styles from './Main.module.css';\n\nexport const Main = () => (\n  <div className={styles.Main}>\n    <Filters />\n    <ImagesList />\n  </div>\n);\n","import React from 'react';\n\nimport './App.css';\nimport Main from './screens/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}